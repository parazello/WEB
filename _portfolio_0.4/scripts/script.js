$(function (){	
/*------------------
1. Найдите в html-коде страницы index.html картинку с id="img_4" и поместите её  внутрь абзаца.*/
//$('img#img_4').appendTo($('div #div_for_img+p'));

/*2а. Создайте css-селектор и пропишите css-правило, которое будет задавать рамку 
в 1px сплошную и красного цвета всем изображениям, 
которые находятся внутри  блока div с id="div_for_img". Проверьте в браузере.*/
//$('img').css({'border' : '1px solid red'});

/*------------------
2б. Измените селектор таким образом, чтобы рамка появлялась только у дочерних 
по отношению к блоку div с id="div_for_img" изображений. Проверьте в браузере.
*/
//$('div#div_for_img img').css({'border' : '1px solid red'});

/*------------------
2в. Измените селектор таким образом, чтобы рамка появлялась у абзаца, который следует за блоком div с id="div_for_img". Проверьте в браузере.*/
//$('div #div_for_img+p').css({'border' : '1px solid red'}) ;

/*3.------------------
 Удалите все внесенные в таблицу стилей изменения.*/
//$('img,p').css({'border' : 'none'});
//$('img#img_4').appendTo($('div #div_for_img'));
/*var hidden = $('img');
hidden.hide(2000);
hidden.show(2000);
hidden.fadeToggle(2000);
*/
/*
1.------------------
 Отобрать в набор все ссылки, которые находятся внутри блока с id="my_links" 
и при этом значение атрибута href у них начинается со слова "documents".
*/
//var hrefs = $('#my_links a[href^=documents]');
/*2.------------------
 Отобрать в набор только те картинки, которые находятся внутри 
блока с id="forfooter" и в качестве значения атрибута title имеют значение "Производители".
*/
//var images = $('#forfooter img[title *="вод"]');

/*------------------
В предыдущем уроке мы с вами отбирали из всего дерева картинку из шапки сайта logo.jpg 
и сделали мы это таким способом: $('img[src*=logo.jpg]').hide();
Ваша же задача: сделать выборку этого же элемента двумя другими способами на Ваше усмотрение.*/
//var firstselect =$('img:first');
//firstselect.hide();
//var secondselect = $('#forheader > img');
//secondselect.hide();
//var thirdselect = $('img:gt(1)');
//thirdselect.hide();
/*------------------
Сохранить в переменную myLink jquery выборку ссылки, которая ведет на pdf файл, 
мгновенно спрятать эту ссылку, поменять у этой ссылки текст (по вашему усмотрению), 
и вернуть ее за 2 секунды.
 Обязательно использовать цепные функции.
*/
//var myLink = $('a[href$="PDF"]');
//myLink[0].setAttribute('href', 'https://google.com');
//myLink.hide().text('Нет больше текста').show();
//});

/*------------------
Отобрать в jquery набор все картинки кроме первой и скрыть их с помощью функции hide() за 5 секунд.
Подсказка: для формирования набора используйте фильтр not.
*/
//var selectimg = $('img:not(img:first)');
//selectimg.show(5000);

/*------------------
Нужно написать функцию, которая будет вычислять размеры элемента. 
Идентификатор элемента, размеры которого надо вычислить, передаются в функцию в качестве параметра.
Результаты функция выводит в специальный блок div с id="forresults", который
находится после таблицы по продаже б/у мотоциклов нашего сайта.
*/
//function getHW(id)
//{
//var res = $(id);
//var out = $('#forresults');	
//var params = "height: " + out.css('height') + ", width: " + out.css('width'); 
//out.text(params);	
//}
//getHW(forheader);

/*------------------
Написать функцию, которая получает 2 параметра - id элемента, 
который должен исчезнуть со страницы и время его исчезнования.

При вызове функции указанный элемент должен плавно исчезать (fadeOut) за указанное  время. 
При этом, второй параметр вам надо проверить на удовлетворение 2-м условиям.
1. Параметр должен быть числом.
2. Число должно быть в диапазоне от 500 до 10000. 
Если число за диапазоном, то вы должны прервать выполнение функции и вернуть false.
*/
/*function hoverById (id, time)
{
	if(isNaN(time) || time < 500 || time > 10000) 
		{
		alert ("Wrong time parameter. Execute will be terminated.");
		return false;	
		}
	else
		{
		$(id).fadeOut (time);
		}
}
hoverById ('#forheader', 2000);*/
/*
------------------
Напишите функцию, которая получает 3 параметра.
1. id элемента, с которым надо работать.
2. Название атрибута, который нужно изменить.
3. Новое значение указанного атрибута.

Функция в результате своей работы должна изменить указанный атрибут указанного элемента.
*/
/*
function changeAttrByElementId (id, attr, param)
	{
	var elem = '#'	+ id;
	$(elem).css(attr,param);
	}
changeAttrByElementId ('div_form_1', 'color', 'red');
*/

/*------------------
На нашей странице есть элемент span с классом "pq", 
который находится внутри заголовка h3 с id="my_h3".

Ваша задача: удалить у этого элемента  класс "pq" и добавить ему 3 css свойства за раз:

border: 1px solid #cc0000
padding: 5px
background-color: #f6f6f6
*//*
$('#my_h3').removeClass('pq').css ({'border': '1px solid #cc0000',
'padding': '5px',
'background-color': '#f6f6f6'});*/

/*------------------
Домашнее задание к 78-му уроку.

Сделайте выборку для картинки второго мотоцикла moto2.jpg.
1. С помощью метода css, добавьте ей рамку 1px solid #333333.
2. Примените анимацию, во время которой увеличьте рамку до значения в 5px за 5 секунд.
После выполнения анимации плавно скройте шапку с помощью функции fadeOut()  за 5 секунд.
Используйте цепные функции.

Подсказка: свойство для увеличения размера рамки в обычном css записывается как border-width.
*/
//$('div#div_for_img img:eq(1)').css('border','1px solid #cc0000').animate({'border-width':'5px'},5000).fadeOut(5000);

/*------------------
Домашнее задание к 79-му уроку.

Ваша задача добавить в самый конец тэга <body> новый абзац с любым текстом 
и дать этому абзацу id="newparagraph".
После этого изменить цвет фона этого параграфа на черный, а цвет текста на белый.
Используйте цепные функции.
*/
/*$('body').append('<p id="newparagraph">Йа ОбЗатС</p>');
$('#newparagraph').css({'background-color':'black', 'color':'white'});*/

/*------------------
Ваша задача перебрать все картинки нашей страницы и добавить красную 1px рамку тем из них, 
у которых в атрибуте title встречается буква "т", а высота больше 50, но меньше 100.
*/
$('img[title *="т"]').each(function () {
	if ($(this).height()>50 && $(this).height()<100)
		$(this).css('border','1px solid red');
})

/*------------------
Напишите обработчик события, который делает следующее.
При клике мышью на любом из названий мотоциклов в этом блоке:
<ol id="moto_models">
        <li>Харлей Дэвидсон</li>
        <li>Кроссовый мотоцикл</li>
        <li>Гоночный мотоцикл</li>
        <li>Концептуальный мотоцикл</li>
</ol>
У Вас в таблице с id="moto_table" должна появляться новая строчка, 
в которой плавно появляется текст из элемента, по которому кликнули.
*/
$('#moto_models li').on('click', function(){
	var content = '<tr><td>'+ $(this).text() + '</tr></td>';
	$('#moto_table tbody').append(content);
} );

/*------------------
Вам нужно написать обработчик события, который будет подсвечивать 
строку таблицы (id="moto_table"), на которую навели курсор мыши 
вот таким цветом: #1F233C, а текст будет делать белым.
Подсказка: если нет идей, как решить данную задачу, то повторите урок 77.
*/	
var tablecell = $('#moto_table tbody tr td');
tablecell.hover(
	function()
		{ 
			$(this).css({'background-color':'#1F233C', 'color':'#FFFFFF'}); 
		},
	function()
		{
			$(this).css({'background-color': '#FFFFFF', 'color':'black'});
		}
		);
/*------------------
Домашнее задание к 89-му уроку.

Перед вами стоит 2 задачи:

1. С помощью события hover() и функции css() сделайте так, 
чтобы при наведении на кнопку "Отправить заявку", ее свойства менялись:
а. Фоновый цвет должен меняться на #32375D.
б. Цвет текста на белый.

Когда же курсор мыши убирается с элемента, то все должно возвратиться на свои места.

2. С помощью toggle() сделайте так, чтобы при первом щелчке строка 
таблицы подсвечивалась, а при повторном принимала обычное 
положение (здесь уже css() использовать не обязательно, можете  использовать классы).
*/
/*------------------
Вам надо написать скрипт, который делает следующее.
При щелчке на любом из наших 4-х мотоциклов, вокруг него должна появляться сплошная рамка в 4px.
При этом, если в момент щелчка мышью по мотоциклу была зажата клавиша shift, 
то цвет  рамки должен быть #cc0000, а если не была зажата то цвет рамки должен быть #333333.
При повторном щелчке по тому же самому мотоциклу рамка должна исчезать.
*/
/*------------------
Сделать так, чтобы во время нажатия кнопки отправки формы с id="#my_button", 
появлялось сообщение с вопросом: "Вы подтверждаете правильность ввода данных?" 
В этом окошке должны быть кнопки "OK" и "Отмена".

Если человек нажмет "Ок" то форма отправляется как положено, а если нажмет "Отмена", 
то форма  не отправляется.

Подсказка: для задания вопроса используйте метод confirm()
*/
/*------------------
Это домашнее задание состоит из трех частей.
1. Над галереей нужно сделать текстовый переключатель "Показать/Скрыть галерею", 
который будет показывать и скрывать галерею функциями slideUp() и slideDown(). 
Изначально галерея должна быть скрыта.

2. Приглядитесь к нашей галерее. У нее есть один существенный недостаток. 
Если, например, у нас в большой картинке на данный момент стоит желтый мотоцикл и при этом, 
мы щелкаем по миниатюре этого же желтого мотоцикла, 
то большая картинка будет  пытаться загрузиться еще раз. 
Это не очень то и хорошо, поэтому ваша задача состоит в  том, 
чтобы при такой ситуации такого не происходило и большая картинка просто оставалась на месте.

3. Ваша задача выделить маленькую картинку того мотоцикла, который сейчас показан. 
Она должна быть выделена одним из следующих способов -
либо должна быть обведена рамкой, 
либо должна иметь прозрачность 60%
либо и то и другое вместе.
*/

/*------------------
Домашнее задание к 97-му уроку.

Щелкните в адресную строку своего браузера и нажмите enter, 
чтобы  страница тестового сайта полностью обновилась. 

Показателем обновления будет то, что в поле для ввода e-mail 
вы должны увидеть текст: "Пример: you@site.ru"
Это значение по умолчанию, и оно стоит там за счет атрибута value="Пример: you@site.ru", 
который есть у этого текстового поля.

Наша задача состоит в том, чтобы, когда пользователь встает в это поле, оно очищалось.
Но очищалось не всегда, а только если в поле находится значение по умолчанию 
т.е. "Пример: you@site.ru"
*/
/*------------------
Перед Вами стоит две задачи:

1. Добавить проверку e-mail адреса с помощью регулярного выражения (см. ниже). 
Проверка должна осуществляться в момент ухода из поля для ввода e-mail (событие blur). 
В случае если e-mail соответствует регулярному выражению, то подсветить поле зеленой рамкой, 
если  не соответсвует, то красной, а если в поле находится значение по умолчанию, то серой. 
При этом надо оставить ту функциональность, при которой в случае пустого ввода 
возвращается значение по умолчанию.

Рег выражение для проверки e-mail:
[-\w.]+@([A-z0-9][-A-z0-9]+\.)+[A-z]{2,4}

2. Запретить повторную отправку формы., т.е. после однократного нажатия кнопки "Отправить заявку", 
она должна блокироваться.
*/
});
